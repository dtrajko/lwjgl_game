#version 400 core

in vec4 clipSpace;
in vec2 textureCoords;

out vec4 out_Color;

uniform sampler2D reflectionTexture;
uniform sampler2D refractionTexture;
uniform sampler2D dudvMap;

uniform float moveFactor;

const float waveStength = 0.01;

void main(void) {

	vec2 ndc = (clipSpace.xy / clipSpace.w) / 2.0 + 0.5;
	vec2 refractTexCoords = vec2(ndc.x, -ndc.y);
	vec2 reflectTexCoords = vec2(ndc.x, ndc.y);
	
	vec2 distortion1 = (texture(dudvMap, vec2(textureCoords.x, textureCoords.y)).rg * 2.0 - 1.0) * waveStength;
	refractTexCoords += distortion1;
	refractTexCoords.x = clamp(refractTexCoords.x, 0.001, 0.999);
	refractTexCoords.y = clamp(refractTexCoords.y, -0.999, -0.001);
	
	reflectTexCoords += distortion1;
	reflectTexCoords = clamp(reflectTexCoords, 0.001, 0.999);

	vec4 reflectColour = texture(reflectionTexture, reflectTexCoords);
	vec4 refractColour = texture(refractionTexture, refractTexCoords);

	out_Color = mix(reflectColour, refractColour, 0.5);

}
